cleaner_merger_task:
  description: >
    Você receberá uma lista de caminhos de arquivos CSV brutos: {file_paths}.

    **Antes de iniciar qualquer operação, verifique se a lista recebida está vazia.**
    - Se não houver arquivos CSV, **retorne imediatamente**: "ERRO: Nenhum arquivo CSV foi fornecido para processamento." e encerre a task.
    - Não execute nenhum outro passo.

    Sua missão é realizar o processo completo de preparação dos dados, seguindo as etapas abaixo:

    1. **Limpeza dos dados individuais**:
      - Corrija problemas de codificação, valores ausentes, colunas mal formatadas e registros duplicados;
      - Padronize os nomes das colunas (ex.: remover espaços, acentos, deixar em minúsculas e com underscores);
      - Uniformize os formatos de dados (datas, números, textos);
      - Gere versões limpas de cada arquivo CSV original.

    2. **Verificação e integração entre arquivos**:
      - Analise os arquivos limpos em busca de colunas-chave comuns (ex.: IDs, datas, códigos) que permitam uma junção lógica;
      - Caso a integração seja viável, realize a mesclagem dos arquivos, criando um único CSV consolidado e coerente.

    3. **Conversão para JSON**:
      - Converta o CSV mesclado em um arquivo JSON estruturado.

    **Regras obrigatórias**:
    - Se não houver arquivos CSV válidos, se a integração não for possível ou se houver qualquer erro ao gerar o JSON, retorne o motivo na variável `json_path` com uma mensagem clara, como:
      - "ERRO: Não foi possível gerar o arquivo JSON porque nenhum CSV foi encontrado."
      - "ERRO: Não foi possível mesclar os arquivos - ausência de colunas-chave comuns."
    - Nunca retorne um caminho de arquivo inexistente.
    - Sempre retorne o caminho do arquivo JSON gerado, **ou uma mensagem de erro na variável `json_path`**.

  expected_output: >
    O caminho absoluto do arquivo JSON resultante da limpeza e/ou mesclagem, OU uma mensagem de erro explícita ("ERRO: Nenhum arquivo CSV foi fornecido para processamento.") caso não haja arquivos de entrada.
    O retorno deve ser feito na variável `json_path`.
  input_variables:
    - file_paths
  output_variables:
    - json_path 
  agent: manager_agent

answer_question_task:
  description: >
    Você receberá uma pergunta em linguagem natural e o caminho absoluto do arquivo JSON limpo e mesclado.

    Responda à pergunta **exclusivamente** com base nos dados desse arquivo, seguindo o protocolo abaixo:

    1. **Verificação do JSON**
      - Se o valor da variável `json_path` começar com "ERRO:" ou não for um caminho de arquivo existente, **retorne imediatamente a mensagem de erro** ao invés de tentar processar qualquer dado.
      - Caso seja um caminho válido de arquivo, prossiga normalmente.

    2. **Carregamento e inspeção**  
      - Antes de qualquer operação, verifique se o arquivo JSON informado realmente existe no caminho recebido.
      - Se o arquivo não existir, **retorne imediatamente**: "Arquivo JSON não encontrado no caminho especificado."
      - Caso exista, leia o arquivo JSON em um DataFrame pandas.
      - Utilize o Code Interpreter Tool para executar o código Python e obter o resultado.
      - Finalize o código gerado pelo Code Interpreter Tool com: `result = <Output adequado>`. 
      - Valide se há dados e quais colunas estão disponíveis.

    3. **Classificação da pergunta**  
       - Se for **quantitativa** (envolve somas, médias, contagens, máximos, mínimos, etc.), siga o fluxo **Q**.  
       - Se for **qualitativa** (descritiva, categórica, tendências, insights textuais), siga o fluxo **T**.

    **Fluxo Q (quantitativa):**  
      3.1. Identifique colunas numéricas e categóricas, , identificando as que podem ser relevantes para a pergunta.  
        - Colunas numéricas: aquelas que podem ser somadas, médias, contadas, etc.  
        - Colunas categóricas: aquelas que podem ser usadas para agrupar ou filtrar os dados.
      - Se a pergunta envolver agregações, determine o tipo de operação (soma, média, contagem, etc.).
      - Se a pergunta envolver comparação entre grupos, identifique as colunas relevantes para o agrupamento e a métrica de comparação.  
      3.2. Determine quais colunas usar para:  
        - **Agrupamento** (colunas categóricas relevantes ao contexto).  
        - **Cálculo** (a coluna numérica sobre a qual se fará soma, média, contagem etc.).  
      3.3. Execute a operação pandas adequada (`groupby`, `agg`, `sort_values`, etc.).  
      3.4. Formule a resposta com:  
        - Valor/resultados principais.  
        - Breve explicação do cálculo realizado.  
        - Uma amostra de linhas do DataFrame (se relevante) para evidenciar.
      3.5. Exemplos de perguntas e respostas: 
        - Pergunta: "Qual item teve maior volume entregue (em quantidade)?"
        - Resposta: "DIPIFARMA INJETÁVEL (DIPIRONA MONOIDR 500MG/ML) 2ML — 51 000 unidades"
        - Exemplo do código python utilizado para responder a pergunta:
            import pandas as pd
            df = pd.read_json('merged_cleaned.json')
            resumo = (
                df
                .groupby('descricao_do_produto/servico')['quantidade']
                .sum()
                .reset_index(name='total_entregue')
                .sort_values('total_entregue', ascending=False)
            )
            top = resumo.iloc[0]
            print(top)

      **Fluxo T (qualitativa):**  
      3.1. Analise padrões nos dados (distribuições, categorias mais frequentes, correlações simples).  
      3.2. Extraia exemplos concretos que sustentem seu comentário (por exemplo, categorias mais comuns, outliers relevantes).  
      3.3. Produza uma resposta interpretativa, clara e embasada nos dados.

      4. **Condições de falha**  
      - Se faltar qualquer coluna essencial para responder à pergunta, retorne:  
        “Não é possível responder porque falta a coluna ‘X’.”  
      - Se o DataFrame estiver vazio, retorne:  
        “Não há registros suficientes para responder a essa pergunta.”

      5. **Formato de saída**  
      - Texto objetivo: resposta final + breve descrição do método de extração.  
      - Quando apropriado, inclua um pequeno trecho de tabela (máx. 5 linhas) para evidência.
  expected_output: >
    Um texto que:
      - Responda de forma direta à pergunta “{question}”;
      - Explique sucintamente o processo de análise;
      - Caso a pergunta seja quantitativa, apresente o valor numerico / resultados principais;
      - Caso a pergunta seja qualitativa, apresente uma análise interpretativa dos dados;
      - Se necessário, indique que não é possível responder devido à falta de colunas essenciais ou dados insuficientes;
      - Se a pergunta for respondida com base em uma tabela, apresente um trecho de tabela como evidência.
      - (Opcional) Apresente um trecho de tabela como evidência.
  input_variables:
    - question
    - json_path
  agent: manager_agent
